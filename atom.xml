<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>虹墨空间站</title>
  
  <subtitle>虹墨空间站</subtitle>
  <link href="https://www.imaegoo.com/atom.xml" rel="self"/>
  
  <link href="https://www.imaegoo.com/"/>
  <updated>2025-09-02T00:00:00.000Z</updated>
  <id>https://www.imaegoo.com/</id>
  
  <author>
    <name>iMaeGoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>卸载百度网盘智能看图</title>
    <link href="https://www.imaegoo.com/2025/uninstall-netdisk-image-viewer/"/>
    <id>https://www.imaegoo.com/2025/uninstall-netdisk-image-viewer/</id>
    <published>2025-09-02T00:00:00.000Z</published>
    <updated>2025-09-02T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>复制代码，粘贴到记事本，保存为 bat 文件，右键以管理员身份运行。</p><span id="more"></span><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 百度网盘智能看图卸载工具</span><br><span class="line"><span class="built_in">echo</span> 请以管理员身份运行此脚本！</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 正在删除注册表项...</span><br><span class="line">:: 删除HKEY_CLASSES_ROOT\BaiduNetdiskImageViewerAssociations</span><br><span class="line"><span class="built_in">taskkill</span> /f /im BaiduNetdisk.exe &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line">reg delete &quot;HKEY_CLASSES_ROOT\BaiduNetdiskImageViewerAssociations&quot; /f &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line"></span><br><span class="line">:: 删除HKEY_CURRENT_USER\Software\Baidu\BaiduNetdiskImageViewer</span><br><span class="line">reg delete &quot;HKEY_CURRENT_USER\Software\Baidu\BaiduNetdiskImageViewer&quot; /f &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line"></span><br><span class="line">:: 删除HKEY_CURRENT_USER\Software\RegisteredApplications\BaiduNetdiskImageViewer</span><br><span class="line">reg delete &quot;HKEY_CURRENT_USER\Software\RegisteredApplications&quot; /v &quot;BaiduNetdiskImageViewer&quot; /f &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> 正在删除文件夹...</span><br><span class="line">:: 安装位置不确定，但开始菜单中一定有快捷方式，通过快捷方式读取百度网盘的安装位置</span><br><span class="line"><span class="keyword">for</span> /f &quot;usebackq delims=&quot; <span class="variable">%%I</span> <span class="keyword">in</span> (`</span><br><span class="line">  powershell -NoLogo -NoProfile -Command ^</span><br><span class="line">    &quot;(New-Object -COM WScript.Shell).CreateShortcut(&#x27;<span class="variable">%APPDATA%</span>\Microsoft\Windows\<span class="built_in">Start</span> Menu\Programs\百度网盘\百度网盘.lnk&#x27;).TargetPath&quot;</span><br><span class="line">`) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> &quot;installDir=<span class="variable">%%~</span>dpI&quot;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">set</span> &quot;installDir=<span class="variable">%installDir:~0,-1%</span>&quot;</span><br><span class="line"><span class="built_in">echo</span> 百度网盘安装位置：<span class="variable">%installDir%</span></span><br><span class="line"></span><br><span class="line">:: 查找并删除百度网盘根目录中的ImageViewer文件夹</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">in</span> (&quot;<span class="variable">%installDir%</span>&quot;, &quot;C:\Program Files\Baidu\BaiduNetdisk&quot;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">exist</span> &quot;<span class="variable">%%i</span>\module\ImageViewer&quot; (</span><br><span class="line">    <span class="built_in">rd</span> /s /q &quot;<span class="variable">%%i</span>\module\ImageViewer&quot;</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> 百度网盘智能看图卸载完成！</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;复制代码，粘贴到记事本，保存为 bat 文件，右键以管理员身份运行。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Windows" scheme="https://www.imaegoo.com/categories/tech/windows/"/>
    
    
    <category term="windows" scheme="https://www.imaegoo.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>CDN 方式引入 Monaco Editor</title>
    <link href="https://www.imaegoo.com/2025/monaco-editor-cdn/"/>
    <id>https://www.imaegoo.com/2025/monaco-editor-cdn/</id>
    <published>2025-09-01T09:30:00.000Z</published>
    <updated>2025-09-01T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在前端工程中可以用 <code>@monaco-editor/loader</code> 来引入 Monaco，但有时候我们的前端项目不依赖 Webpack、Vite 等打包工具，如何在普通网页中用纯 CDN 的方式引入 Monaco Editor？</p><span id="more"></span><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Monaco Editor<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#editor</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100vw</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://registry.npmmirror.com/monaco-editor/0.52.2/files/min/vs/loader.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">paths</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">vs</span>: <span class="string">&quot;https://registry.npmmirror.com/monaco-editor/0.52.2/files/min/vs&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">window</span>.<span class="property">MonacoEnvironment</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">getWorkerUrl</span>: <span class="keyword">function</span> (<span class="params">workerId, label</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> <span class="string">`data:text/javascript;charset=utf-8,<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(</span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">            <span class="string">&#x27;self.MonacoEnvironment=&#123;baseUrl:&quot;https://registry.npmmirror.com/monaco-editor/0.52.2/files/min/&quot;&#125;;&#x27;</span> +</span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">              <span class="string">&#x27;importScripts(&quot;https://registry.npmmirror.com/monaco-editor/0.52.2/files/min/vs/base/worker/workerMain.js&quot;);&#x27;</span></span></span></span></span><br><span class="line"><span class="subst"><span class="string"><span class="language-javascript">          )&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">require</span>([<span class="string">&quot;vs/editor/editor.main&quot;</span>], <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> editorElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;editor&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> editor = monaco.<span class="property">editor</span>.<span class="title function_">create</span>(editorElement, &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">value</span>:</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;function main() &#123;\n  console.log(&#x27;Hello, iMaeGoo!&#x27;);\n&#125;\n\nmain();\n&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">language</span>: <span class="string">&quot;javascript&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, <span class="function">() =&gt;</span></span></span><br><span class="line"><span class="language-javascript">          editor.<span class="title function_">layout</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">width</span>: editorElement.<span class="property">offsetWidth</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">height</span>: editorElement.<span class="property">offsetHeight</span>,</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><iframe style="width:100%;height:300px" src="data:text/html,%3C!DOCTYPE%20html%3E%0A%3Chtml%20lang%3D%22zh-CN%22%3E%0A%20%20%3Chead%3E%0A%20%20%20%20%3Cmeta%20charset%3D%22utf-8%22%20%2F%3E%0A%20%20%20%20%3Ctitle%3EMonaco%20Editor%3C%2Ftitle%3E%0A%20%20%20%20%3Cstyle%3E%0A%20%20%20%20%20%20body%20%7B%0A%20%20%20%20%20%20%20%20margin%3A%200%3B%0A%20%20%20%20%20%20%20%20padding%3A%200%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%23editor%20%7B%0A%20%20%20%20%20%20%20%20width%3A%20100vw%3B%0A%20%20%20%20%20%20%20%20height%3A%20100vh%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%3C%2Fstyle%3E%0A%20%20%3C%2Fhead%3E%0A%20%20%3Cbody%3E%0A%20%20%20%20%3Cdiv%20id%3D%22editor%22%3E%3C%2Fdiv%3E%0A%20%20%20%20%3Cscript%20src%3D%22https%3A%2F%2Fregistry.npmmirror.com%2Fmonaco-editor%2F0.52.2%2Ffiles%2Fmin%2Fvs%2Floader.js%22%3E%3C%2Fscript%3E%0A%20%20%20%20%3Cscript%3E%0A%20%20%20%20%20%20require.config(%7B%0A%20%20%20%20%20%20%20%20paths%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20vs%3A%20%22https%3A%2F%2Fregistry.npmmirror.com%2Fmonaco-editor%2F0.52.2%2Ffiles%2Fmin%2Fvs%22%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20window.MonacoEnvironment%20%3D%20%7B%0A%20%20%20%20%20%20%20%20getWorkerUrl%3A%20function%20(workerId%2C%20label)%20%7B%0A%20%20%20%20%20%20%20%20%20%20return%20%60data%3Atext%2Fjavascript%3Bcharset%3Dutf-8%2C%24%7BencodeURIComponent(%0A%20%20%20%20%20%20%20%20%20%20%20%20'self.MonacoEnvironment%3D%7BbaseUrl%3A%22https%3A%2F%2Fregistry.npmmirror.com%2Fmonaco-editor%2F0.52.2%2Ffiles%2Fmin%2F%22%7D%3B'%20%2B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20'importScripts(%22https%3A%2F%2Fregistry.npmmirror.com%2Fmonaco-editor%2F0.52.2%2Ffiles%2Fmin%2Fvs%2Fbase%2Fworker%2FworkerMain.js%22)%3B'%0A%20%20%20%20%20%20%20%20%20%20)%7D%60%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%3B%0A%20%20%20%20%20%20require(%5B%22vs%2Feditor%2Feditor.main%22%5D%2C%20function%20()%20%7B%0A%20%20%20%20%20%20%20%20const%20editorElement%20%3D%20document.getElementById(%22editor%22)%3B%0A%20%20%20%20%20%20%20%20const%20editor%20%3D%20monaco.editor.create(editorElement%2C%20%7B%0A%20%20%20%20%20%20%20%20%20%20value%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%22function%20main()%20%7B%5Cn%20%20console.log('Hello%2C%20iMaeGoo!')%3B%5Cn%7D%5Cn%5Cnmain()%3B%5Cn%22%2C%0A%20%20%20%20%20%20%20%20%20%20language%3A%20%22javascript%22%2C%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20window.addEventListener(%22resize%22%2C%20()%20%3D%3E%0A%20%20%20%20%20%20%20%20%20%20editor.layout(%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20width%3A%20editorElement.offsetWidth%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20height%3A%20editorElement.offsetHeight%2C%0A%20%20%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%20%20)%3B%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%3C%2Fscript%3E%0A%20%20%3C%2Fbody%3E%0A%3C%2Fhtml%3E"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;在前端工程中可以用 &lt;code&gt;@monaco-editor/loader&lt;/code&gt; 来引入 Monaco，但有时候我们的前端项目不依赖 Webpack、Vite 等打包工具，如何在普通网页中用纯 CDN 的方式引入 Monaco Editor？&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>在线工具 - 富文本转 Markdown</title>
    <link href="https://www.imaegoo.com/2025/html-to-md/"/>
    <id>https://www.imaegoo.com/2025/html-to-md/</id>
    <published>2025-09-01T04:30:00.000Z</published>
    <updated>2025-09-01T04:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>只需在以下文本框中粘贴网页或 Word 文档的内容，即可转换为 Markdown 格式！</p><p>与网上现有工具相比，这个能支持表格转换！</p><span id="more"></span><h3 id="粘贴网页内容-x2F-Word-文档内容"><a href="#粘贴网页内容-x2F-Word-文档内容" class="headerlink" title="粘贴网页内容 &#x2F; Word 文档内容"></a>粘贴网页内容 &#x2F; Word 文档内容</h3><style>  #editor—wrapper {    border: 1px solid #ccc;    z-index: 999;  }  #toolbar-container {    border-bottom: 1px solid #ccc;  }  #editor-container {    height: 300px;  }  #html-content,  #md-content {    height: 300px;  }</style><div id="editor—wrapper">  <div id="toolbar-container"></div>  <div id="editor-container"></div></div><h3 id="转换后的-Markdown-内容"><a href="#转换后的-Markdown-内容" class="headerlink" title="转换后的 Markdown 内容"></a>转换后的 Markdown 内容</h3><textarea class="textarea" id="md-content" placeholder="转换后的 Markdown 内容"></textarea><script src="https://registry.npmmirror.com/@wangeditor/editor/5.1.23/files/dist/index.js"></script><script src="https://registry.npmmirror.com/turndown/7.2.1/files/dist/turndown.js"></script><script src="/js/imaegoo/turndown-plugin-gfm.js"></script><script>  document.head.appendChild(    Object.assign(document.createElement("link"), {      rel: "stylesheet",      href: "https://registry.npmmirror.com/@wangeditor/editor/5.1.23/files/dist/css/style.css",    })  );  const { createEditor, createToolbar } = window.wangEditor;  const turndownService = new TurndownService({    headingStyle: "atx",    hr: "----",    bulletListMarker: "-",    codeBlockStyle: "fenced",  });  turndownService.use(TurndownPluginGfmService.gfm);  const editorConfig = {    placeholder: "粘贴 HTML 内容",    onChange(editor) {      const html = editor.getHtml();      const markdown = turndownService.turndown(html);      document.getElementById("md-content").value = markdown;    },  };  const editor = createEditor({    selector: "#editor-container",    html: "<p><br></p>",    config: editorConfig,    mode: "simple",  });  const toolbar = createToolbar({    editor,    selector: "#toolbar-container",    config: {},    mode: "simple",  });</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;只需在以下文本框中粘贴网页或 Word 文档的内容，即可转换为 Markdown 格式！&lt;/p&gt;
&lt;p&gt;与网上现有工具相比，这个能支持表格转换！&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="https://www.imaegoo.com/categories/tool/"/>
    
    
    <category term="tool" scheme="https://www.imaegoo.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>2025 年了，安卓平板上什么第三方九键输入法最好用？</title>
    <link href="https://www.imaegoo.com/2025/android-pad-input-method/"/>
    <id>https://www.imaegoo.com/2025/android-pad-input-method/</id>
    <published>2025-08-25T04:00:00.000Z</published>
    <updated>2025-08-25T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>题外话，我换过好多平板，我理想中的平板是 11 寸，这个大小不至于太重，又不至于屏幕太小，要搭载顶级处理器，玩游戏不卡顿，最好支持解锁 BL。</p><p>第一台平板是 iPad Pro 2018 11 寸，这个平板陪伴了我整整 6 年，依然流畅如新，奈何现如今带不动绝区零等大型游戏了，卖掉了。</p><p>第二台平板是小米平板 7，太卡！本来澎湃就吃硬件，还用了个 7+ Gen 3，掉帧死机家常便饭，还无法通过小米的解锁考试，卖掉了。</p><p>第三台是一加平板 2 Pro，顶级配置，一个 fastboot 命令就能轻松解锁，然而第一次用 13 寸，好重啊，躺着更是没法玩，使用频率都降低了，卖掉了。</p><p>第四台也就是现在用的，联想拯救者 Y700，虽然 8 寸是小了点，但毕竟很轻，很容易就接受了。</p><p>联想平板系统就像毛坯房，预装的输入法功能实在太少，决定装一个第三方的输入法，于是考虑如下选择：</p><ul><li>Gboard（谷歌）</li><li>百度输入法</li><li>搜狗输入法</li><li>讯飞输入法</li><li>微信输入法</li></ul><span id="more"></span><p>首先我是一位九键用户，九键在横屏模式下好不好用是我选择一个输入法的重要标准，我认为理想的九键布局，是我正在使用的 VIVO 输入法的布局，这种布局能够在横屏（或者展开形态的折叠屏）状态时，轻松单手打字。</p><p><img src="/gallery/2025/android-pad-input-method/1756091985501.webp"></p><p>其次是支持剪切板、个性短语，方便快速输入地址、手机号等信息，这基本上已经是各家标配功能了。</p><h3 id="Gboard"><a href="#Gboard" class="headerlink" title="Gboard"></a>Gboard</h3><p><img src="/gallery/2025/android-pad-input-method/1756093349018.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093360818.webp"></p><p>谷歌出品的输入法在风格上完全遵守自家的设计规范，英文键盘更加贴近实体键盘的键位，很容易上手，然而九键在横屏下不支持分屏，横屏打字就比较难受了。</p><h3 id="百度输入法"><a href="#百度输入法" class="headerlink" title="百度输入法"></a>百度输入法</h3><p><img src="/gallery/2025/android-pad-input-method/1756093512148.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093515225.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093517471.webp"></p><p>百度输入法的九键布局是我最喜欢的，自定义程度也很高，能合能分，但在联想平板上有一个 bug，清理后台会导致百度输入法失去默认输入法地位，每次清后台都要去重新设置回百度输入法，折腾几次就不想用了。</p><h3 id="百度输入法小米版"><a href="#百度输入法小米版" class="headerlink" title="百度输入法小米版"></a>百度输入法小米版</h3><p><img src="/gallery/2025/android-pad-input-method/1756093523827.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093526380.webp"></p><p>小米版中文和原版相同，英文是和 Gboard 一样的实体键盘布局，但在联想平板上有一个 bug，每次弹出键盘都要弹出用户须知：</p><p><img src="/gallery/2025/android-pad-input-method/1756093529571.webp"></p><p>不管是同意还是拒绝，下次还会弹出，权限管理中授予了所有权限也不行，酷安里也看到有相同的反馈，但没有找到解决方案，遂放弃研究。</p><h3 id="搜狗输入法"><a href="#搜狗输入法" class="headerlink" title="搜狗输入法"></a>搜狗输入法</h3><p><img src="/gallery/2025/android-pad-input-method/1756093447517.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093444958.webp"></p><p>搜狗输入法的九键布局有两个奇怪的地方：</p><ol><li>数字键 1 会显示为「分词」，去设置中关闭分词功能可以变回来，但没有分词就不能方便地打出「西安」、「酷安」这类词了；</li><li>符号中有一个歪歪扭扭的 <code>.COM</code>，还不能改，强迫症实在看不下去了。</li></ol><h3 id="讯飞输入法"><a href="#讯飞输入法" class="headerlink" title="讯飞输入法"></a>讯飞输入法</h3><p><img src="/gallery/2025/android-pad-input-method/1756093455731.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093458336.webp"></p><p>讯飞九键中间可以手写，这个设计让人眼前一亮，但它占了很大的空间，无法调整，我用手写的频率是很少的，没必要为了这个牺牲九键的空间。</p><h3 id="微信输入法"><a href="#微信输入法" class="headerlink" title="微信输入法"></a>微信输入法</h3><p><img src="/gallery/2025/android-pad-input-method/1756093429699.webp"></p><p><img src="/gallery/2025/android-pad-input-method/1756093438238.webp"></p><p>微信输入法相比百度和搜狗，界面更加简洁干净无广告，和其他输入法数字键+九键的布局不同，微信一边是选词区，一边是九键，这种布局一开始不太适应，但用两分钟就会发现，选词的使用频率是高于数字键盘的，更大的选词区确实方便不少。微信输入法还直接支持外接键盘打字，外接键盘不用来回切换输入法了：</p><p><img src="/gallery/2025/android-pad-input-method/1756098085786.webp"></p><p>一个星期体验下来也没有什么明显的 bug。要说缺点，就是导入词库有点难搞，我 PC 上的主力输入法是 Rime 小狼毫，要是微信能直接导入 txt 词库就方便了。</p><p>经过以上对比，最后我选择了微信输入法。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题外话，我换过好多平板，我理想中的平板是 11 寸，这个大小不至于太重，又不至于屏幕太小，要搭载顶级处理器，玩游戏不卡顿，最好支持解锁 BL。&lt;/p&gt;
&lt;p&gt;第一台平板是 iPad Pro 2018 11 寸，这个平板陪伴了我整整 6 年，依然流畅如新，奈何现如今带不动绝区零等大型游戏了，卖掉了。&lt;/p&gt;
&lt;p&gt;第二台平板是小米平板 7，太卡！本来澎湃就吃硬件，还用了个 7+ Gen 3，掉帧死机家常便饭，还无法通过小米的解锁考试，卖掉了。&lt;/p&gt;
&lt;p&gt;第三台是一加平板 2 Pro，顶级配置，一个 fastboot 命令就能轻松解锁，然而第一次用 13 寸，好重啊，躺着更是没法玩，使用频率都降低了，卖掉了。&lt;/p&gt;
&lt;p&gt;第四台也就是现在用的，联想拯救者 Y700，虽然 8 寸是小了点，但毕竟很轻，很容易就接受了。&lt;/p&gt;
&lt;p&gt;联想平板系统就像毛坯房，预装的输入法功能实在太少，决定装一个第三方的输入法，于是考虑如下选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gboard（谷歌）&lt;/li&gt;
&lt;li&gt;百度输入法&lt;/li&gt;
&lt;li&gt;搜狗输入法&lt;/li&gt;
&lt;li&gt;讯飞输入法&lt;/li&gt;
&lt;li&gt;微信输入法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Android" scheme="https://www.imaegoo.com/categories/tech/android/"/>
    
    
    <category term="android" scheme="https://www.imaegoo.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>鸿蒙 PC 编译运行 Electron 应用</title>
    <link href="https://www.imaegoo.com/2025/harmony-pc-electron/"/>
    <id>https://www.imaegoo.com/2025/harmony-pc-electron/</id>
    <published>2025-08-25T00:00:00.000Z</published>
    <updated>2025-08-25T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>华为推出的 MateBook Pro 首次搭载了鸿蒙 PC 操作系统，使其能够直接运行鸿蒙手机应用和鸿蒙平板应用，但仅仅这样只能称得上是『大号平板』。</p><p>Electron 框架是优秀的跨平台客户端框架，通过改造，鸿蒙 PC 上也能运行 Electron 应用，具体如何操作呢？</p><span id="more"></span><h2 id="编译-Electron"><a href="#编译-Electron" class="headerlink" title="编译 Electron"></a>编译 Electron</h2><p>可以自己编译，也可以用华为预编译好的版本。</p><h3 id="自己编译"><a href="#自己编译" class="headerlink" title="自己编译"></a>自己编译</h3><p>参考文档：<a href="https://gitcode.com/openharmony-sig/electron">https://gitcode.com/openharmony-sig/electron</a></p><p>编译环境必须使用 Ubuntu 22.04，可以用虚拟机。</p><p>编译耗时很长，我用 8 核虚拟机 <strong>跑了大概 8 个小时左右</strong>，如无特殊需求建议用华为预编译好的版本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装工具git-lfs, ccache。注：该步骤仅在首次拉取代码时需要执行</span></span><br><span class="line">sudo apt install -y git-lfs ccache curl python3 python-is-python3 python3-pip</span><br><span class="line">python --version</span><br><span class="line">pip --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载码云repo工具(可以参考码云帮助中心：https://gitee.com/help/articles/4316)</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/bin</span><br><span class="line">curl https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 &gt; ~/bin/repo</span><br><span class="line"><span class="built_in">chmod</span> a+x ~/bin/repo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=~/bin/:$PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过NodeSource仓库安装node和npm</span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -</span><br><span class="line">sudo apt install -y nodejs</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用https拉取chromium-electron代码</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://gitcode.com/openharmony-sig/electron.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令`git lfs pull`，确保仓库中的大文件已经下载完成</span></span><br><span class="line"><span class="built_in">cd</span> electron</span><br><span class="line">git lfs pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取chromium-electron对应的ohos chromium代码</span></span><br><span class="line">git config --global user.name <span class="string">&quot;iMaeGoo&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;mail1st@qq.com&quot;</span></span><br><span class="line">repo init -u  https://gitcode.com/openharmony-tpc/manifest.git -b pc_chromium_132 -m pc_chromium_132_20251106.xml --no-repo-verify</span><br><span class="line">repo <span class="built_in">sync</span> -c  <span class="comment"># 可以执行多次，以确保代码全部拉取成功</span></span><br><span class="line">repo forall -c <span class="string">&#x27;git lfs pull&#x27;</span>  <span class="comment"># 可执行多次，以确保大文件全部拉取成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用chromium-electron的patch到ohos chromium</span></span><br><span class="line"><span class="built_in">pushd</span> src</span><br><span class="line">find -name <span class="string">&quot;*.git*&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf <span class="string">&quot;&#123;&#125;&quot;</span> \;</span><br><span class="line"><span class="built_in">popd</span></span><br><span class="line"><span class="built_in">chmod</span> +x override_files.sh</span><br><span class="line">./override_files.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行 Electron实际目录/src/build/install-build-deps.sh脚本，安装编译所需的软件包。注：该步骤仅在首次拉取代码时需要执行</span></span><br><span class="line">sudo ./src/build/install-build-deps.sh --no-chromeos-fonts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行脚本electron_build.sh</span></span><br><span class="line">./electron_build.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过如下脚本拷贝所需资源(注：请参考修改为自己的source_path)</span></span><br><span class="line">source_path=./Electron实际目录/src/out/musl_64</span><br><span class="line">destination_path=./electron</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$&#123;destination_path&#125;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/libelectron.so <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/libffmpeg.so <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/libadapter.so <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/electron <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/icudtl.dat <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/v8_context_snapshot.bin <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/chrome_100_percent.pak <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/chrome_200_percent.pak <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/resources.pak <span class="variable">$&#123;destination_path&#125;</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$&#123;destination_path&#125;</span>/locales</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/locales/zh-CN.pak <span class="variable">$&#123;destination_path&#125;</span>/locales</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$&#123;source_path&#125;</span>/locales/en-US.pak <span class="variable">$&#123;destination_path&#125;</span>/locales</span><br></pre></td></tr></table></figure><h3 id="使用预编译版本"><a href="#使用预编译版本" class="headerlink" title="使用预编译版本"></a>使用预编译版本</h3><p>没有调用 addon 和 ArkTS 的需求时可以直接使用以下二进制 release 包进行开发。</p><ol><li><p>获取最新日期的二进制 release 包，华为账号登录<a href="https://devcloud.cn-north-4.huaweicloud.com/codehub/project/b19f5ea8ffd4492ea8c06ca2ebf3f858/codehub/2821214/home?ref=electron34-release">仓库</a>，下载默认 Electron 34 的 release 包。</p></li><li><p>解压</p></li></ol><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>安装 DevEco Studio，目前是 5.1.0，最新版即可</p><p><a href="https://developer.huawei.com/consumer/cn/download/">https://developer.huawei.com/consumer/cn/download/</a></p><p>配置环境变量，这样以后能方便地使用 hdc 等命令</p><p>假设安装路径是 <code>D:\dev\DevEcoStudio</code>，就在 PATH 中增加 <code>D:\dev\DevEcoStudio\sdk\default\openharmony\toolchains</code></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>打开 DevEco，打开前面编译&#x2F;下载好的项目 ohos_hap</p><p>首次运行需要证书，按提示登录华为账号即可生成证书</p><p>跑起来的效果，按 Ctrl + Alt + I 可以打开调试</p><p><img src="/gallery/2025/harmony-pc-electron/1756091289483.webp"></p><p>Electron 的入口点在 <code>src/main/resources/resfile/resources/app/main.js</code>，修改后重新运行即可看到效果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, <span class="title class_">Tray</span>, nativeImage &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mainWindow, tray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">  tray = <span class="keyword">new</span> <span class="title class_">Tray</span>(nativeImage.<span class="title function_">createFromPath</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;electron_white.png&#x27;</span>)));</span><br><span class="line">  mainWindow = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  mainWindow.<span class="title function_">setWindowButtonVisibility</span>(<span class="literal">true</span>);</span><br><span class="line">  mainWindow.<span class="title function_">loadURL</span>(<span class="string">&#x27;https://caiyunapp.com/map/&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">whenReady</span>().<span class="title function_">then</span>(createWindow);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;华为推出的 MateBook Pro 首次搭载了鸿蒙 PC 操作系统，使其能够直接运行鸿蒙手机应用和鸿蒙平板应用，但仅仅这样只能称得上是『大号平板』。&lt;/p&gt;
&lt;p&gt;Electron 框架是优秀的跨平台客户端框架，通过改造，鸿蒙 PC 上也能运行 Electron 应用，具体如何操作呢？&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Harmony" scheme="https://www.imaegoo.com/categories/tech/harmony/"/>
    
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
    <category term="app" scheme="https://www.imaegoo.com/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>bat 脚本打印输出彩色文字</title>
    <link href="https://www.imaegoo.com/2025/bat-color/"/>
    <id>https://www.imaegoo.com/2025/bat-color/</id>
    <published>2025-08-06T00:00:00.000Z</published>
    <updated>2025-08-06T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>要在 Windows 批处理脚本中打印彩色内容，通常的方式是 <code>echo [32mHello World[0m</code>，但这种方式需要输入特殊字符 <code>ESC</code>（ASCII 码为 27），我试过 Alt+027 的快捷键却怎么也打不出来这个字符，而且这种方式各个颜色的编码也很不好记，分享一种更简单的方法！</p><p><a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/write-host">https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/write-host</a></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">powershell -Command &quot;Write-Host &#x27;This is Black&#x27; -ForegroundColor White -BackgroundColor Black&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkBlue&#x27; -ForegroundColor White -BackgroundColor DarkBlue&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkGreen&#x27; -ForegroundColor White -BackgroundColor DarkGreen&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkCyan&#x27; -ForegroundColor White -BackgroundColor DarkCyan&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkRed&#x27; -ForegroundColor White -BackgroundColor DarkRed&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkMagenta&#x27; -ForegroundColor White -BackgroundColor DarkMagenta&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkYellow&#x27; -ForegroundColor White -BackgroundColor DarkYellow&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Gray&#x27; -ForegroundColor Black -BackgroundColor Gray&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is DarkGray&#x27; -ForegroundColor White -BackgroundColor DarkGray&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Blue&#x27; -ForegroundColor White -BackgroundColor Blue&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Green&#x27; -ForegroundColor White -BackgroundColor Green&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Cyan&#x27; -ForegroundColor Black -BackgroundColor Cyan&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Red&#x27; -ForegroundColor White -BackgroundColor Red&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Magenta&#x27; -ForegroundColor White -BackgroundColor Magenta&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is Yellow&#x27; -ForegroundColor Black -BackgroundColor Yellow&quot;</span><br><span class="line">powershell -Command &quot;Write-Host &#x27;This is White&#x27; -ForegroundColor Black -BackgroundColor White&quot;</span><br></pre></td></tr></table></figure><p>其中单引号内是打印的文字内容，ForegroundColor 参数传文字颜色，BackgroundColor 参数传背景颜色，直接传颜色名字，非常方便。</p><span id="more"></span><p><img src="/gallery/2025/bat-color/1754448805064.webp"></p><p>如果在批处理中使用，可以定义一个函数，调用起来更简洁。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> :<span class="built_in">print</span> &quot;Hello, world!&quot; Yellow Red</span><br><span class="line"><span class="keyword">call</span> :<span class="built_in">print</span> &quot;Hello, iMaeGoo!&quot; White Blue</span><br><span class="line"><span class="keyword">exit</span> /b <span class="number">0</span></span><br><span class="line"></span><br><span class="line">:<span class="built_in">print</span></span><br><span class="line">powershell -Command &quot;Write-Host &#x27;%<span class="number">1</span>&#x27; -ForegroundColor %<span class="number">2</span> -BackgroundColor %<span class="number">3</span>&quot;</span><br><span class="line"><span class="function">goto:<span class="title">eof</span></span></span><br></pre></td></tr></table></figure><p>效果</p><p><img src="/gallery/2025/bat-color/1754449222262.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;要在 Windows 批处理脚本中打印彩色内容，通常的方式是 &lt;code&gt;echo [32mHello World[0m&lt;/code&gt;，但这种方式需要输入特殊字符 &lt;code&gt;ESC&lt;/code&gt;（ASCII 码为 27），我试过 Alt+027 的快捷键却怎么也打不出来这个字符，而且这种方式各个颜色的编码也很不好记，分享一种更简单的方法！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/write-host&quot;&gt;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/write-host&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Black&amp;#x27; -ForegroundColor White -BackgroundColor Black&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkBlue&amp;#x27; -ForegroundColor White -BackgroundColor DarkBlue&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkGreen&amp;#x27; -ForegroundColor White -BackgroundColor DarkGreen&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkCyan&amp;#x27; -ForegroundColor White -BackgroundColor DarkCyan&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkRed&amp;#x27; -ForegroundColor White -BackgroundColor DarkRed&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkMagenta&amp;#x27; -ForegroundColor White -BackgroundColor DarkMagenta&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkYellow&amp;#x27; -ForegroundColor White -BackgroundColor DarkYellow&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Gray&amp;#x27; -ForegroundColor Black -BackgroundColor Gray&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is DarkGray&amp;#x27; -ForegroundColor White -BackgroundColor DarkGray&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Blue&amp;#x27; -ForegroundColor White -BackgroundColor Blue&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Green&amp;#x27; -ForegroundColor White -BackgroundColor Green&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Cyan&amp;#x27; -ForegroundColor Black -BackgroundColor Cyan&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Red&amp;#x27; -ForegroundColor White -BackgroundColor Red&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Magenta&amp;#x27; -ForegroundColor White -BackgroundColor Magenta&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is Yellow&amp;#x27; -ForegroundColor Black -BackgroundColor Yellow&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;powershell -Command &amp;quot;Write-Host &amp;#x27;This is White&amp;#x27; -ForegroundColor Black -BackgroundColor White&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中单引号内是打印的文字内容，ForegroundColor 参数传文字颜色，BackgroundColor 参数传背景颜色，直接传颜色名字，非常方便。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Windows" scheme="https://www.imaegoo.com/categories/tech/windows/"/>
    
    
    <category term="windows" scheme="https://www.imaegoo.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Android 强制锁定屏幕旋转方向</title>
    <link href="https://www.imaegoo.com/2025/orientation-lock/"/>
    <id>https://www.imaegoo.com/2025/orientation-lock/</id>
    <published>2025-07-11T00:00:00.000Z</published>
    <updated>2025-07-11T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用我的一加平板时，一直被一个问题困扰，由于我的桌面电源在左手边，平板横着放在桌上时，如果需要充电，就需要将 Type-C 接口对准左侧，这就需要先解除旋转锁定，立起平板，待屏幕旋转后，打开旋转锁定，再放平。使其锁定在充电口朝左的横屏状态（技术上称为 <code>SCREEN_ORIENTATION_REVERSE_LANDSCAPE</code>，屏幕方向反横向）。</p><p>以前用 iPad Pro 时，我也是一直都这么干的，这倒也没啥，但更麻烦的问题来了。有些 APP 由于代码实现问题，会强制屏幕旋转至某个方向，例如在平板打开美团时，会自动切换到竖屏，打开苍雾世界时，会自动切换到充电口朝右的横屏，退出应用时又会自动切回来。于是当我需要以上场景使用这些 APP 时，必须拖着充电线把平板转来转去，不够大的桌面，不够长的充电线，加上 13 寸 1 斤重的平板，让这一切显得格外艰难。</p><span id="more"></span><p>无法忍受的我便去寻找解决方案，有没有什么模块，能让旋转锁定真正发挥『锁定』的作用，让屏幕不受 APP 影响地保持在一个方向？</p><p>找到了 <a href="https://github.com/tuyafeng/OrientationLock">Orientation Lock</a>，这个只有 65 个 star 的软件可能鲜为人知，但作者 tuyafeng 的另一个软件『Via 浏览器』大家应该都听过。Orientation Lock 的体积只有 60 KB，非常符合该作者的风格，只需要悬浮窗权限，不需要 adb 不需要 root 也不需要安装模块。打开 APP，选择『反转横屏』，然后授予悬浮窗权限，好了，现在各个 APP 都可以在反横屏状态下使用了，解决了我的大麻烦！</p><p><img src="/gallery/2025/orientation-lock/1752201059692.webp"></p><p>附上下载地址：<a href="https://github.com/tuyafeng/OrientationLock/releases/download/1.0.0/OrientationLock_v1.0.apk">https://github.com/tuyafeng/OrientationLock/releases/download/1.0.0/OrientationLock_v1.0.apk</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在使用我的一加平板时，一直被一个问题困扰，由于我的桌面电源在左手边，平板横着放在桌上时，如果需要充电，就需要将 Type-C 接口对准左侧，这就需要先解除旋转锁定，立起平板，待屏幕旋转后，打开旋转锁定，再放平。使其锁定在充电口朝左的横屏状态（技术上称为 &lt;code&gt;SCREEN_ORIENTATION_REVERSE_LANDSCAPE&lt;/code&gt;，屏幕方向反横向）。&lt;/p&gt;
&lt;p&gt;以前用 iPad Pro 时，我也是一直都这么干的，这倒也没啥，但更麻烦的问题来了。有些 APP 由于代码实现问题，会强制屏幕旋转至某个方向，例如在平板打开美团时，会自动切换到竖屏，打开苍雾世界时，会自动切换到充电口朝右的横屏，退出应用时又会自动切回来。于是当我需要以上场景使用这些 APP 时，必须拖着充电线把平板转来转去，不够大的桌面，不够长的充电线，加上 13 寸 1 斤重的平板，让这一切显得格外艰难。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="Android" scheme="https://www.imaegoo.com/categories/tech/android/"/>
    
    
    <category term="android" scheme="https://www.imaegoo.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>腾讯代码托管服务 Coding 将停服</title>
    <link href="https://www.imaegoo.com/2025/coding-end-of-service/"/>
    <id>https://www.imaegoo.com/2025/coding-end-of-service/</id>
    <published>2025-06-27T01:00:00.000Z</published>
    <updated>2025-06-27T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云本周宣布 Coding 将在今年 9 月 1 日起停止免费版服务，2028 年 9 月 30 日彻底停止服务。</p><span id="more"></span><p><img src="/gallery/2025/coding-end-of-service/1750987354004.webp"></p><p>原公告：<a href="https://cloud.tencent.com/document/product/1726/116235">https://cloud.tencent.com/document/product/1726/116235</a></p><p>对此我居然一点也不感到意外，毕竟也不是被背刺一回两回了，就是花了点时间把 Coding 上面的代码迁移到阿里云 Codeup。</p><p>公告上说推荐迁移到他们的新一代产品《云原生构建》，我试了一下，连 SSH 都不支持，只能 HTTPS 方式克隆，直接告辞。</p><p><img src="/gallery/2025/coding-end-of-service/1750987517274.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;腾讯云本周宣布 Coding 将在今年 9 月 1 日起停止免费版服务，2028 年 9 月 30 日彻底停止服务。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>微信快速找出自己创建的群聊</title>
    <link href="https://www.imaegoo.com/2025/find-owned-weixin-group/"/>
    <id>https://www.imaegoo.com/2025/find-owned-weixin-group/</id>
    <published>2025-05-08T05:00:00.000Z</published>
    <updated>2025-05-08T05:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>微信本身没有筛选自己创建的群聊的功能，需要将微信的数据库解密，然后通过 SQL 语句查询。</p><span id="more"></span><h3 id="下载所需工具"><a href="#下载所需工具" class="headerlink" title="下载所需工具"></a>下载所需工具</h3><ol><li>微信 4.0.3.22 Windows 版本，最新版本的不行，下载地址: <a href="https://github.com/cscnk52/wechat-windows-versions/releases/tag/v4.0.3.22">https://github.com/cscnk52/wechat-windows-versions/releases/tag/v4.0.3.22</a> (如果这个地址没了就自己再找)</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746690814601.webp"></p><ol start="2"><li>wechat-dump-rs，下载地址: <a href="https://github.com/0xlane/wechat-dump-rs/releases">https://github.com/0xlane/wechat-dump-rs/releases</a></li><li>DB Browser for SQLite，下载地址: <a href="https://sqlitebrowser.org/dl/#windows">https://sqlitebrowser.org/dl/#windows</a></li></ol><h3 id="解密数据库"><a href="#解密数据库" class="headerlink" title="解密数据库"></a>解密数据库</h3><ol><li>登录微信，保持微信运行</li><li>打开 cmd，cd 到 wechat-dump-rs.exe 所在目录</li><li>执行 <code>wechat-dump-rs.exe -a</code></li><li>如果看到 <code>decryption complete!!</code> 就成功了，output to 后面就是解密后的数据库路径</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746690948415.webp"></p><h3 id="打开数据库"><a href="#打开数据库" class="headerlink" title="打开数据库"></a>打开数据库</h3><ol><li>到 DB Browser for SQLite 的安装目录，打开 <code>DB Browser for SQLCipher.exe</code></li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691668841.webp"></p><ol start="2"><li>打开数据库，定位到上一步 output 的目录，打开 <code>contact/contact.db</code></li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691078525.webp"></p><ol start="3"><li>点执行 SQL</li><li>粘贴以下语句，点执行</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> chat_room.owner, contact.nick_name</span><br><span class="line"><span class="keyword">FROM</span> chat_room</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> contact</span><br><span class="line"><span class="keyword">ON</span> chat_room.username <span class="operator">=</span> contact.username</span><br><span class="line"><span class="keyword">WHERE</span> chat_room.owner <span class="operator">=</span> &quot;换成你的微信号&quot;</span><br><span class="line"><span class="keyword">AND</span> contact.is_in_chat_room <span class="operator">!=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>就可以看到所有自己创建的微信群了</li></ol><p><img src="/gallery/2025/find-owned-weixin-group/1746691159125.webp"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;微信本身没有筛选自己创建的群聊的功能，需要将微信的数据库解密，然后通过 SQL 语句查询。&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="https://www.imaegoo.com/categories/diary/"/>
    
    
    <category term="diary" scheme="https://www.imaegoo.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>将扣子空间生成的 jsx 格式网页部署到自己的服务器</title>
    <link href="https://www.imaegoo.com/2025/coze-space-jsx/"/>
    <id>https://www.imaegoo.com/2025/coze-space-jsx/</id>
    <published>2025-04-29T00:00:00.000Z</published>
    <updated>2025-04-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>扣子空间生成的网页是 jsx 格式的，在扣子空间内可以正常打开，如果想要部署到自己的服务器，则需要经过编译。</p><p>为此，我写了一个模板，只需将扣子空间生成的 jsx 重命名为 <code>coze.tsx</code>（注意后缀要改为 tsx）放入本项目 <code>src</code> 目录，即可编译出可静态部署的 dist 产物。</p><span id="more"></span><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><ol><li>从扣子空间下载 jsx 文件</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745907200269.webp"></p><ol start="2"><li>下载 <a href="https://github.com/imaegoo/coze-space-jsx-template">模板工程</a></li><li>安装 Node.js</li><li>进入本项目所在目录，运行 <code>npm install -g pnpm</code> 安装 pnpm 包管理器</li><li>运行 <code>pnpm install</code> 安装依赖</li><li>将扣子空间生成的 jsx 重命名为 <code>coze.tsx</code>（注意后缀要改为 tsx），放入 <code>src</code> 目录，覆盖原有的 <code>coze.tsx</code> 文件</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745898560927.webp"></p><ol start="7"><li>检查 <code>coze.tsx</code> 中的 <code>import</code> 语句，确保所有第三方包都已经安装，举例：如果 <code>coze.tsx</code> 中有 <code>import Mermaid from &#39;mermaid&#39;;</code>，就执行安装 <code>pnpm install mermaid</code></li><li>运行 <code>pnpm run dev</code> 查看效果</li></ol><p><img src="/gallery/2025/coze-space-jsx/1745898552039.webp"></p><ol start="9"><li>运行 <code>pnpm run build</code> 编译</li><li>编译完成后，在 <code>dist</code> 目录下即可找到编译后的产物</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;扣子空间生成的网页是 jsx 格式的，在扣子空间内可以正常打开，如果想要部署到自己的服务器，则需要经过编译。&lt;/p&gt;
&lt;p&gt;为此，我写了一个模板，只需将扣子空间生成的 jsx 重命名为 &lt;code&gt;coze.tsx&lt;/code&gt;（注意后缀要改为 tsx）放入本项目 &lt;code&gt;src&lt;/code&gt; 目录，即可编译出可静态部署的 dist 产物。&lt;/p&gt;</summary>
    
    
    
    <category term="Tech" scheme="https://www.imaegoo.com/categories/tech/"/>
    
    <category term="FrontEnd" scheme="https://www.imaegoo.com/categories/tech/frontend/"/>
    
    
    <category term="js" scheme="https://www.imaegoo.com/tags/js/"/>
    
    <category term="nodejs" scheme="https://www.imaegoo.com/tags/nodejs/"/>
    
  </entry>
  
</feed>
